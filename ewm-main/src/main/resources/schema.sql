drop table if exists users cascade;
create table users (
   id integer generated by default as identity,
   email varchar(254) unique,
   name varchar(250),
   primary key (id)
);

drop table if exists locations cascade;
create table locations (
   id integer generated by default as identity,
   lat real,
   lon real,
   primary key (id),
   unique(lat, lon)
);

drop table if exists categories cascade;
create table categories (
   id integer generated by default as identity,
   name varchar(50) unique,
   primary key (id)
);

drop table if exists compilations cascade;
create table compilations (
   id integer generated by default as identity,
   pinned boolean default false,
   title varchar(50) unique,
   primary key (id)
);

drop table if exists events cascade;
create table events (
   id integer generated by default as identity,
   annotation varchar(2000),
   category_id integer references categories(id),
   confirmed_requests integer default 0,
   created_on timestamp,
   description varchar(7000),
   event_date timestamp,
   initiator_id integer references users(id),
   location_id integer references locations(id) on delete cascade,
   paid boolean default false,
   available boolean default true,
   participant_limit integer default 0,
   published_on timestamp,
   request_moderation boolean default true,
   state varchar(255) default 'PENDING',
   title varchar(120),
   primary key (id)
);

drop table if exists compilations_events cascade;
create table compilations_events (
   event_id integer references events(id) on delete cascade,
   compilation_id integer references compilations(id) on delete cascade,
   primary key (event_id, compilation_id)
);

drop table if exists requests cascade;
create table requests (
   id integer generated by default as identity,
   status varchar(255),
   event_id integer references events(id),
   user_id integer references users(id),
   created_on timestamp,
   primary key (id)
);


